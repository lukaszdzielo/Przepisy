# Sample workflow for building and deploying a Nuxt site to GitHub Pages
#
# To get started with Nuxt see: https://nuxtjs.org/docs/get-started/installation
#
name: Deploy Nuxt site to Pages

on:
  push:
    branches: ["main"]

# Dodane uprawnienia wymagane przez akcje do wdrożenia na GitHub Pages
permissions:
  contents: read     # Potrzebne do pobrania kodu (checkout)
  pages: write       # Potrzebne do wdrożenia na Pages
  id-token: write    # Potrzebne do uwierzytelnienia OIDC dla akcji deploy-pages

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Upewnij się, że wersja Node jest kompatybilna z Twoim projektem Nuxt
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject router.base in your Nuxt configuration file and set
          # target to static (https://nuxtjs.org/docs/configuration-glossary/configuration-target/).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: nuxt
      # Usunięto krok 'Restore cache' - setup-node@v4 z opcją 'cache' zazwyczaj wystarcza
      # Jeśli nadal potrzebujesz cache dla .nuxt/dist, możesz go przywrócić, ale często nie jest to konieczne dla prostych buildów
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Static HTML export with Nuxt
        # DODANO SEKCJĘ 'env' TUTAJ:
        # Przekazuje zmienną repozytorium do procesu budowania Nuxt
        env:
          VITE_CORRECT_PASSWORD: ${{ vars.VITE_CORRECT_PASSWORD }}
        run: ${{ steps.detect-package-manager.outputs.manager }} run generate
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Ścieżka do wygenerowanych plików przez Nuxt 3 (domyślnie .output/public)
          # Dla Nuxt 2 'static target' domyślnie było 'dist'
          # Sprawdź swoją konfigurację Nuxt!
          path: ./.output/public # Popraw, jeśli używasz Nuxt 2 lub masz inną ścieżkę

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build # Upewnij się, że zadanie 'build' zakończyło się pomyślnie
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Używa artefaktu przesłanego przez zadanie 'build'
